// <auto-generated />
using API.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(EmployeeDbContext))]
    partial class EmployeeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("API.Models.Entities.Department", b =>
                {
                    b.Property<string>("DepartmentId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments", (string)null);

                    b.HasData(
                        new
                        {
                            DepartmentId = "D1",
                            DepartmentName = "IT",
                            Description = "Information Technology"
                        },
                        new
                        {
                            DepartmentId = "D2",
                            DepartmentName = "HR",
                            Description = "Human Resource"
                        },
                        new
                        {
                            DepartmentId = "D3",
                            DepartmentName = "Sales",
                            Description = "Sales Department"
                        });
                });

            modelBuilder.Entity("API.Models.Entities.DepartmentHistory", b =>
                {
                    b.Property<int>("DepartmentHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentHistoryId"));

                    b.Property<bool>("Available")
                        .HasColumnType("bit");

                    b.Property<string>("DepartmentId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.HasKey("DepartmentHistoryId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("DepartmentHistories", (string)null);

                    b.HasData(
                        new
                        {
                            DepartmentHistoryId = 1,
                            Available = true,
                            DepartmentId = "D1",
                            EmployeeId = 1
                        },
                        new
                        {
                            DepartmentHistoryId = 2,
                            Available = true,
                            DepartmentId = "D2",
                            EmployeeId = 2
                        },
                        new
                        {
                            DepartmentHistoryId = 3,
                            Available = true,
                            DepartmentId = "D1",
                            EmployeeId = 3
                        });
                });

            modelBuilder.Entity("API.Models.Entities.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Salary")
                        .HasColumnType("real");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees", (string)null);

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            Address = "New York",
                            CompanyName = "XYZ Inc",
                            Designation = "Developer",
                            Name = "John",
                            Salary = 30000f
                        },
                        new
                        {
                            EmployeeId = 2,
                            Address = "New York",
                            CompanyName = "ABC Inc",
                            Designation = "Manager",
                            Name = "Chris",
                            Salary = 50000f
                        },
                        new
                        {
                            EmployeeId = 3,
                            Address = "California",
                            CompanyName = "FPT New York",
                            Designation = "Business Analyst",
                            Name = "David",
                            Salary = 60000f
                        });
                });

            modelBuilder.Entity("API.Models.Entities.DepartmentHistory", b =>
                {
                    b.HasOne("API.Models.Entities.Department", "Department")
                        .WithMany("DepartmentHistory")
                        .HasForeignKey("DepartmentId");

                    b.HasOne("API.Models.Entities.Employee", "Employee")
                        .WithMany("DepartmentHistory")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("API.Models.Entities.Department", b =>
                {
                    b.Navigation("DepartmentHistory");
                });

            modelBuilder.Entity("API.Models.Entities.Employee", b =>
                {
                    b.Navigation("DepartmentHistory");
                });
#pragma warning restore 612, 618
        }
    }
}
